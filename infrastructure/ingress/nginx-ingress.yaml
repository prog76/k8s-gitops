---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: nginx-ingress
  namespace: ingress
  annotations:
    fluxcd.io/ignore: "false"
    fluxcd.io/automated: "true"
    filter.fluxcd.io/defaultBackend: semver:~1.0
    repository.fluxcd.io/defaultBackend: defaultBackend.image.repository
    tag.fluxcd.io/defaultBackend: defaultBackend.image.tag
spec:
  releaseName: nginx-ingress
  chart:
    repository: https://kubernetes.github.io/ingress-nginx
    name: ingress-nginx
    version: 4.0.17
  values:
    defaultBackend:
      enabled: true
      extraEnvs:
      - name: "ASPNETCORE_URLS"
        value: "http://0.0.0.0:5000"
      image:
        repository: devservicetitan.azurecr.io/infra/st-nginx-default-backend/master
        tag: "1.0.46"
      port: 5000
    controller:
      priorityClassName: system-node-critical
      replicaCount: 3
      podAnnotations:
        fluentbit.io/parser_stderr: catchAll
      proxySetHeaders:
        HTTP_X_FORWARDED_FOR: ${proxy_add_x_forwarded_for}
      config:
        ssl-protocols: "TLSv1.2 TLSv1.3"
        proxy-body-size: "200m"
        large-client-header-buffers: "4 64k"
        hsts-max-age: "31536000"
        http2-max-field-size: "16k"
        http2-max-header-size: "32k"
        log-format-escape-json: "true"
        log-format-upstream: '{"timestamp": "$time_iso8601", "requestID": "$req_id",
          "proxyUpstreamName": "$proxy_upstream_name", "proxyAlternativeUpstreamName":
          "$proxy_alternative_upstream_name","upstreamStatus": "$upstream_status",
          "upstreamAddr": "$upstream_addr","httpRequest":{"requestMethod": "$request_method",
          "requestUrl": "$host$request_uri", "status": $status,"requestSize": "$request_length",
          "responseSize": "$upstream_response_length", "userAgent": "$http_user_agent",
          "remoteIp": "$remote_addr", "referer": "$http_referer", "responseTime":
          "$upstream_response_time", "protocol":"$server_protocol", "oauth_user":
          "$sent_http_x_auth_request_email", "cache": "$upstream_cache_status"}}yamllint disable-line
        proxy-connect-timeout: "300s"
        proxy-send-timeout: "300s"
        proxy-read-timeout: "300s"
        # cache
        http-snippet: |
          proxy_cache_path /tmp/proxy-cache levels=1:2 keys_zone=static-cache:2m max_size=3G inactive=31d use_temp_path=off;
          proxy_cache_key $proxy_host:$request_uri;
          proxy_cache_lock on;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504 http_403 http_404;
          proxy_ignore_headers Set-Cookie;
      service:
        type: LoadBalancer
        externalTrafficPolicy: Local
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus-operator
          namespace: monitoring
      extraArgs:
        default-ssl-certificate: $(POD_NAMESPACE)/st.dev
      resources:
        limits:
          cpu: 1
          memory: 2000Mi
        requests:
          cpu: 1
          memory: 2000Mi
